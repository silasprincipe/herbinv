[
  {
    "objectID": "tripneustes.html",
    "href": "tripneustes.html",
    "title": "Tripneustes ventricosus",
    "section": "",
    "text": "Tripneustes ventricosus have a broad distribution, from south Florida and Bermuda up to the south of Brazil, inhabiting various habitats. It can exert significant grazing pressure on coral reefs, although it usually has a more significant impact on seagrass beds.\n\n\n\n\nWhite sea urchin. Cifonauta image database. Available at: http://cifonauta.cebimar.usp.br/media/9531/ Accessed: 2024-08-12. CC BY-NC-SA 3.0 DEED"
  },
  {
    "objectID": "tripneustes.html#current-and-future-distribution-sdms",
    "href": "tripneustes.html#current-and-future-distribution-sdms",
    "title": "Tripneustes ventricosus",
    "section": "Current and future distribution (SDMs)",
    "text": "Current and future distribution (SDMs)\nBoth E. lucunter and T. ventricosus showed areas of higher suitability in the Caribbean and south of the Gulf of Mexico, especially along the coast of Campeche to Quintana Roo (Mexico). Both species also show areas of high suitability along the Antilles. Tripneustes ventricosus seems to be less tolerant to colder temperatures.\n\n\nCode\nsuppressPackageStartupMessages(library(terra))\nsuppressPackageStartupMessages(library(sf))\nlibrary(leaflet)\nlibrary(leaflet.providers)\nlibrary(leafem)\n\nsp &lt;- \"trve\"\n\nbasedir &lt;- paste0(\"../results/\", sp, \"/predictions/\")\n\nsdm_proj &lt;- list.files(basedir)\nsdm_proj &lt;- sdm_proj[grepl(\"mean\", sdm_proj)]\nsdm_proj_cont &lt;- sdm_proj[grepl(\"cont\", sdm_proj)]\n\nproj_lays &lt;- rast(paste0(basedir, sdm_proj_cont))\nproj_lays &lt;- project(proj_lays, \"EPSG:3857\")\n\n# Normalize to 0-1\nproj_lays &lt;- (proj_lays - min(terra::minmax(proj_lays$trve_mean_m6_cont_current)[1,])) / (terra::minmax(proj_lays$trve_mean_m6_cont_current)[2,] - terra::minmax(proj_lays$trve_mean_m6_cont_current)[1,])\n\n# Get areas of extrapolation\nextrap_lays &lt;- proj_lays[[2:4]]\nextrap_lays[extrap_lays &lt;= terra::minmax(proj_lays$trve_mean_m6_cont_current)[2,]] &lt;- NA\nextrap_lays[!is.na(extrap_lays)] &lt;- 1\n\nextrap_shape &lt;- lapply(1:3, function(id){\n  terra::project(terra::as.polygons(extrap_lays[[id]]), \"EPSG:4326\")\n})\n\n# Set maximum to the maximum of current layer\nproj_lays[proj_lays &gt; 1] &lt;- 1\n\n# Load points\npts &lt;- read.csv(paste0(\"../data/\", sp, \"/\", sp, \"_filt.csv\"))\npts &lt;- vect(pts, geom = c(\"x\", \"y\"), crs = crs(rast(paste0(basedir, sdm_proj_cont[1]))))\npts &lt;- project(pts, \"EPSG:4326\")\npts &lt;- as.data.frame(geom(pts))\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    proj_lays[[1]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"Current\"\n  ) %&gt;%\n  addRasterImage(\n    proj_lays[[2]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[1]], group = \"SSP1 (RCP2.6)\") %&gt;%\n  addRasterImage(\n    proj_lays[[3]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[2]], group = \"SSP2 (RCP4.5)\") %&gt;%\n  addRasterImage(\n    proj_lays[[4]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[3]], group = \"SSP3 (RCP7.0)\") %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\"),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ), values = values(proj_lays[[1]]), title = \"ROR\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Current\", \"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "tripneustes.html#changes-in-future-distribution-sdms",
    "href": "tripneustes.html#changes-in-future-distribution-sdms",
    "title": "Tripneustes ventricosus",
    "section": "Changes in future distribution (SDMs)",
    "text": "Changes in future distribution (SDMs)\nTripneustes ventricosus do not present any apparent loss in its distribution range compared to the current scenario. This species would increase its range of suitable areas to the north and to the south.\n\n\nCode\ndelta &lt;- proj_lays[[2:4]] - proj_lays[[1]]\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    delta[[1]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addRasterImage(\n    delta[[2]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addRasterImage(\n    delta[[3]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = T\n    ), values = seq(-1, 1, by = 0.1), title = \"Delta ROR\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "tripneustes.html#current-and-future-distribution-mechanistic-model",
    "href": "tripneustes.html#current-and-future-distribution-mechanistic-model",
    "title": "Tripneustes ventricosus",
    "section": "Current and future distribution (mechanistic model)",
    "text": "Current and future distribution (mechanistic model)\nTripneustes ventricosus had a smaller suitable area than the other species. It was more concentrated in tropical areas mainly from Florida to the south of Rio de Janeiro. The loss of suitable areas in the future was proportionally similar to the other species (12, 47 and 65% in the SSP1, SSP2, and SSP3 scenarios respectively), but T. ventricosus suitable area was ~20% smaller than the one of L. variegatus and ~12% smaller than the suitable area of E. lucunter.\n\n\nCode\n# Load layers and prepare\n# Load threshold data ----\nload(\"../data/sst_limits/allspecies_oisst_thvalues.RData\")\n\n# Load results ----\nsp &lt;- \"trve\" # Each species is run separately [try \"eclu\" and \"trve\"]\n\n# Load rasters generated before\ncurr &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_current_thresh.tif\"))\nssp1 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp126\", \"_thresh.tif\"))\nssp2 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp245\", \"_thresh.tif\"))\nssp3 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp370\", \"_thresh.tif\"))\n\ncurr &lt;- project(curr, \"EPSG:3857\")\nssp1 &lt;- project(ssp1, \"EPSG:3857\")\nssp2 &lt;- project(ssp2, \"EPSG:3857\")\nssp3 &lt;- project(ssp3, \"EPSG:3857\")\n\n# Get the percentage of time to use as threshold (mean of min and max point)\nlval &lt;- round(((thresholds[[sp]]$time_inrange_hottest_point +\n                        thresholds[[sp]]$time_inrange_coolest_point)/2),\n              2) # round to 2 digits\n\n\n# Get the polygons of the areas that are suitable\nget.pol &lt;- function(x){\n        # temp &lt;- terra::app(x, function(x){\n        #         x[x &lt; lval] &lt;- NA\n        #         x[x &gt;= lval] &lt;- 1\n        #         x\n        # })\n        # temp &lt;- as.polygons(temp)\n        # temp &lt;- aggregate(buffer(temp,0.0001)) # We use a negligible value here\n        #                                       # to solve problems in the pols\n        #                                       # conversion.\n        # temp &lt;- project(temp, \"EPSG:4326\")\n        # # temp &lt;- st_as_sf(temp)\n        # # temp &lt;- st_set_crs(temp, crs(\"EPSG:4326\"))\n        # temp\n      x[x &lt; lval] &lt;- NA\n      x[x &gt;= lval] &lt;- 1\n      terra::project(terra::as.polygons(x), \"EPSG:4326\")\n}\n\ncurr.p &lt;- get.pol(curr)\nssp1.p &lt;- get.pol(ssp1)\nssp2.p &lt;- get.pol(ssp2)\nssp3.p &lt;- get.pol(ssp3)\n\n\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    curr,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"Current\"\n  ) %&gt;%\n  addPolygons(data = curr.p,\n    group = \"Current Suitable\") %&gt;%\n  addRasterImage(\n    ssp1,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addPolygons(data = ssp1.p,\n    group = \"SSP1 Suitable\") %&gt;%\n  addRasterImage(\n    ssp2,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addPolygons(data = ssp2.p,\n    group = \"SSP2 Suitable\") %&gt;%\n  addRasterImage(\n    ssp3,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addPolygons(data = ssp3.p,\n    group = \"SSP3 Suitable\") %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = TRUE\n    ), values = seq(0, 1, by = 0.1), title = \"% time\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE) * 100)) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Current\", \"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\", \"Current Suitable\", \"SSP1 Suitable\", \"SSP2 Suitable\", \"SSP3 Suitable\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  hideGroup(c(\"Occurrence\", \"Current Suitable\", \"SSP1 Suitable\", \"SSP2 Suitable\", \"SSP3 Suitable\")) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "echinometra.html",
    "href": "echinometra.html",
    "title": "Echinometra lucunter",
    "section": "",
    "text": "Two species of Echinometra occur in the western Atlantic: E. viridis and E. lucunter. Echinometra lucunter is one of the most common sea urchins on Brazilian reefs, where it can attain great abundance in shallower areas. Although its importance in herbivory can be variable, species of this genus participate actively in the reef carbonate cycle.\n\n\n\n\nAlvaro E. Migotto. Black sea urchin. Cifonauta image database. Available at: http://cifonauta.cebimar.usp.br/media/4032/ Accessed: 2024-08-12."
  },
  {
    "objectID": "echinometra.html#current-and-future-distribution-sdms",
    "href": "echinometra.html#current-and-future-distribution-sdms",
    "title": "Echinometra lucunter",
    "section": "Current and future distribution (SDMs)",
    "text": "Current and future distribution (SDMs)\nBoth E. lucunter and T. ventricosus showed areas of higher suitability in the Caribbean and south of the Gulf of Mexico, especially along the coast of Campeche to Quintana Roo (Mexico). Both species also show areas of high suitability along the Antilles. Echinometra lucunter has a higher range of distribution to the south.\n\n\nCode\nsuppressPackageStartupMessages(library(terra))\nsuppressPackageStartupMessages(library(sf))\nlibrary(leaflet)\nlibrary(leaflet.providers)\nlibrary(leafem)\n\nsp &lt;- \"eclu\"\n\nbasedir &lt;- paste0(\"../results/\", sp, \"/predictions/\")\n\nsdm_proj &lt;- list.files(basedir)\nsdm_proj &lt;- sdm_proj[grepl(\"mean\", sdm_proj)]\nsdm_proj_cont &lt;- sdm_proj[grepl(\"cont\", sdm_proj)]\n\nproj_lays &lt;- rast(paste0(basedir, sdm_proj_cont))\nproj_lays &lt;- project(proj_lays, \"EPSG:3857\")\n\n# Normalize to 0-1\nproj_lays &lt;- (proj_lays - min(terra::minmax(proj_lays$eclu_mean_m4_cont_current)[1,])) / (terra::minmax(proj_lays$eclu_mean_m4_cont_current)[2,] - terra::minmax(proj_lays$eclu_mean_m4_cont_current)[1,])\n\n# Get areas of extrapolation\nextrap_lays &lt;- proj_lays[[2:4]]\nextrap_lays[extrap_lays &lt;= terra::minmax(proj_lays$eclu_mean_m4_cont_current)[2,]] &lt;- NA\nextrap_lays[!is.na(extrap_lays)] &lt;- 1\n\nextrap_shape &lt;- lapply(1:3, function(id){\n  terra::project(terra::as.polygons(extrap_lays[[id]]), \"EPSG:4326\")\n})\n\n# Set maximum to the maximum of current layer\nproj_lays[proj_lays &gt; 1] &lt;- 1\n\n# Load points\npts &lt;- read.csv(paste0(\"../data/\", sp, \"/\", sp, \"_filt.csv\"))\npts &lt;- vect(pts, geom = c(\"x\", \"y\"), crs = crs(rast(paste0(basedir, sdm_proj_cont[1]))))\npts &lt;- project(pts, \"EPSG:4326\")\npts &lt;- as.data.frame(geom(pts))\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    proj_lays[[1]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"Current\"\n  ) %&gt;%\n  addRasterImage(\n    proj_lays[[2]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[1]], group = \"SSP1 (RCP2.6)\") %&gt;%\n  addRasterImage(\n    proj_lays[[3]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[2]], group = \"SSP2 (RCP4.5)\") %&gt;%\n  addRasterImage(\n    proj_lays[[4]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[3]], group = \"SSP3 (RCP7.0)\") %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\"),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ), values = values(proj_lays[[1]]), title = \"ROR\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Current\", \"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "echinometra.html#changes-in-future-distribution-sdms",
    "href": "echinometra.html#changes-in-future-distribution-sdms",
    "title": "Echinometra lucunter",
    "section": "Changes in future distribution (SDMs)",
    "text": "Changes in future distribution (SDMs)\nEchinometra lucunter do not present any apparent loss in its distribution range compared to the current scenario. This species would increase its range of suitable areas to the north and to the south.\n\n\nCode\ndelta &lt;- proj_lays[[2:4]] - proj_lays[[1]]\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    delta[[1]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addRasterImage(\n    delta[[2]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addRasterImage(\n    delta[[3]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = T\n    ), values = seq(-1, 1, by = 0.1), title = \"Delta ROR\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "echinometra.html#current-and-future-distribution-mechanistic-model",
    "href": "echinometra.html#current-and-future-distribution-mechanistic-model",
    "title": "Echinometra lucunter",
    "section": "Current and future distribution (mechanistic model)",
    "text": "Current and future distribution (mechanistic model)\nEchinometra lucunter had a similar distribution than L. variegatus, but a smaller extension to the south and unsuitable areas in the northern portion of the Gulf of Mexico. Echinometra lucunter is expected to lose approximately 13, 48, and 65% of its suitable area in the SSP1, SSP2, and SSP3 scenarios.\n\n\nCode\n# Load layers and prepare\n# Load threshold data ----\nload(\"../data/sst_limits/allspecies_oisst_thvalues.RData\")\n\n# Load results ----\nsp &lt;- \"eclu\" # Each species is run separately [try \"eclu\" and \"trve\"]\n\n# Load rasters generated before\ncurr &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_current_thresh.tif\"))\nssp1 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp126\", \"_thresh.tif\"))\nssp2 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp245\", \"_thresh.tif\"))\nssp3 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp370\", \"_thresh.tif\"))\n\ncurr &lt;- project(curr, \"EPSG:3857\")\nssp1 &lt;- project(ssp1, \"EPSG:3857\")\nssp2 &lt;- project(ssp2, \"EPSG:3857\")\nssp3 &lt;- project(ssp3, \"EPSG:3857\")\n\n# Get the percentage of time to use as threshold (mean of min and max point)\nlval &lt;- round(((thresholds[[sp]]$time_inrange_hottest_point +\n                        thresholds[[sp]]$time_inrange_coolest_point)/2),\n              2) # round to 2 digits\n\n\n# Get the polygons of the areas that are suitable\nget.pol &lt;- function(x){\n        # temp &lt;- terra::app(x, function(x){\n        #         x[x &lt; lval] &lt;- NA\n        #         x[x &gt;= lval] &lt;- 1\n        #         x\n        # })\n        # temp &lt;- as.polygons(temp)\n        # temp &lt;- aggregate(buffer(temp,0.0001)) # We use a negligible value here\n        #                                       # to solve problems in the pols\n        #                                       # conversion.\n        # temp &lt;- project(temp, \"EPSG:4326\")\n        # # temp &lt;- st_as_sf(temp)\n        # # temp &lt;- st_set_crs(temp, crs(\"EPSG:4326\"))\n        # temp\n      x[x &lt; lval] &lt;- NA\n      x[x &gt;= lval] &lt;- 1\n      terra::project(terra::as.polygons(x), \"EPSG:4326\")\n}\n\ncurr.p &lt;- get.pol(curr)\nssp1.p &lt;- get.pol(ssp1)\nssp2.p &lt;- get.pol(ssp2)\nssp3.p &lt;- get.pol(ssp3)\n\n\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    curr,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"Current\"\n  ) %&gt;%\n  addPolygons(data = curr.p,\n    group = \"Current Suitable\") %&gt;%\n  addRasterImage(\n    ssp1,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addPolygons(data = ssp1.p,\n    group = \"SSP1 Suitable\") %&gt;%\n  addRasterImage(\n    ssp2,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addPolygons(data = ssp2.p,\n    group = \"SSP2 Suitable\") %&gt;%\n  addRasterImage(\n    ssp3,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addPolygons(data = ssp3.p,\n    group = \"SSP3 Suitable\") %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = TRUE\n    ), values = seq(0, 1, by = 0.1), title = \"% time\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE) * 100)) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Current\", \"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\", \"Current Suitable\", \"SSP1 Suitable\", \"SSP2 Suitable\", \"SSP3 Suitable\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  hideGroup(c(\"Occurrence\", \"Current Suitable\", \"SSP1 Suitable\", \"SSP2 Suitable\", \"SSP3 Suitable\")) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A thorny future for sea urchins in the Tropical Western Atlantic",
    "section": "",
    "text": "Under climate change, many functional pathways may be disrupted by induced changes in the distribution of key species. Sea urchins significantly contribute to bioerosion and herbivory rates in coral reefs, assuming a leading role in certain regions. Thus, regional losses of sea urchin populations can potentially impact coral reefs in the Atlantic. Here we modeled the potential distribution of three widely distributed sea urchins of the tropical Atlantic (Lytechinus variegatus, Echinometra lucunter and Tripneustes ventricosus) in three future climate change scenarios for 2100. Species distributions were modeled using a Log-Gaussian Cox Process model in a Bayesian-based framework. Using a mechanistic model, we also assessed how changes in the thermal regime alone can lead to distributional changes. Distribution models predicted poleward range expansions for all studied species, but a relative stability in the areas where the species are currently distributed (except for L. variegatus). However, this relative stability may be caused by inherent limitations when modeling the distribution of tropical species. This is reinforced by the realized thermal niche analysis, which points out thermal regimes exceeding the historical range experienced by the species, threatening their natural occurrence in several zones of the Caribbean. Our results highlight that achieving the targets outlined in the Paris Agreement to reach the best-case scenarios is necessary to ensure the persistence of sea urchins on coral reefs along the Tropical Western Atlantic.\n\nThis article is under submission.\nA thorny future for sea urchins in the Tropical Western Atlantic\nPrincipe, Silas C.1,2, Acosta, André L.3, Lotufo, Tito M. C.1\n1 Instituto Oceanográfico, Universidade de São Paulo, São Paulo, Brasil. 2 Intergovernmental Oceanographic Commission of UNESCO, Ocean Biodiversity Information System, Oostende, Belgium. 3 Planetary Health Brazil, Institute of Advanced Studies, Universidade de São Paulo, São Paulo, Brasil."
  },
  {
    "objectID": "thermal.html",
    "href": "thermal.html",
    "title": "Changes in thermal safety margin",
    "section": "",
    "text": "Code\nset.seed(2020)\n\n# Load needed packages ----\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(ggdist))\nsuppressPackageStartupMessages(library(raster))\nsuppressPackageStartupMessages(library(tidyverse))\n\n# Load species and environmental data ----\nsp &lt;- c(\"lyva\", \"eclu\", \"trve\")\n\npts &lt;- lapply(sp, function(x){\n  read.csv(paste0(\"../data/\", x, \"/\", x, \"_filt.csv\"))[,1:2]\n})\n\n# Load predictions ----\npred &lt;- lapply(sp, function(x){\n  f &lt;- list.files(paste0(\"../results/\", x, \"/predictions/\"), full.names = T,\n                  pattern = \"current\")\n  f &lt;- f[grep(\"cont\", f)]\n  f &lt;- f[grep(\"mean\", f)]\n  p &lt;- raster(f)\n  # convert to 0 - 1 scale\n  p &lt;- (p - minValue(p))/(maxValue(p) - minValue(p))\n  return(p)\n})\n\n# Now threshold to remove areas with very low ROR\nfor (i in 1:3) {\n  pred.vals &lt;- raster::extract(pred[[i]], pts[[i]])\n  p10 &lt;- ceiling(length(pred.vals) * 0.9)\n  thresh &lt;- rev(sort(pred.vals))[p10]\n  pred[[i]][pred[[i]] &lt; thresh] &lt;- NA\n}\n\n# Sample 1000 points, using the ROR as a probability\nspts &lt;- lapply(pred, function(x){\n  rpts &lt;- dismo::randomPoints(x, n = 1000, prob = T)\n  return(rpts)\n})\n\n# Species temperature limits\nlims &lt;- data.frame(species = sp,\n                   optimum = c(27.2, 29.4, 30.7),\n                   upper_l = c(34.5, 36, 34),\n                   lower_l = c(14.6, 14.3, 19.1))\n\nlims$delta_lo &lt;- lims$lower_l - lims$optimum\nlims$delta_up &lt;- lims$upper_l - lims$optimum\n\nnames(pts) &lt;- c(\"lyva\", \"eclu\", \"trve\")\n\ncurr &lt;- raster(\"../data/env/crop_layers/BO21_tempmean_ss.tif\")\nssp1 &lt;- raster(\"../data/env/proj_layers/ssp126/BO21_tempmean_ss.tif\")\nssp2 &lt;- raster(\"../data/env/proj_layers/ssp245/BO21_tempmean_ss.tif\")\nssp3 &lt;- raster(\"../data/env/proj_layers/ssp370/BO21_tempmean_ss.tif\")\n\nbaseproj &lt;- raster(\"../data/env/ready_layers/sst_cur.tif\")\n\ncurr &lt;- projectRaster(curr, crs = crs(baseproj))\nssp1 &lt;- projectRaster(ssp1, crs = crs(baseproj))\nssp2 &lt;- projectRaster(ssp2, crs = crs(baseproj))\nssp3 &lt;- projectRaster(ssp3, crs = crs(baseproj))\n\ndata &lt;- data.frame(sst = 1, species = NA, scenario = NA)[-1,]\n\nfor (i in 1:3) {\n  c1 &lt;- data.frame(sst = raster::extract(curr, spts[[i]]) - lims[i,2],\n              species = names(pts)[i], scenario = \"current\")\n  c2 &lt;- data.frame(sst = raster::extract(ssp1, spts[[i]]) - lims[i,2],\n              species = names(pts)[i], scenario = \"ssp1\")\n  c3 &lt;- data.frame(sst = raster::extract(ssp2, spts[[i]]) - lims[i,2],\n              species = names(pts)[i], scenario = \"ssp2\")\n  c4 &lt;- data.frame(sst = raster::extract(ssp3, spts[[i]]) - lims[i,2],\n              species = names(pts)[i], scenario = \"ssp3\")\n  data &lt;- rbind(data, c1, c2, c3, c4);rm(c1, c2, c3, c4)\n}\n\n# Classify values below/above optimum\ndata$sit &lt;- ifelse(data$sst &lt;= 0, \"L\", \"H\")\n\n# Reorder scenarios\ndata$scenario &lt;- as.factor(data$scenario)\ndata$scenario &lt;- factor(data$scenario, levels = c(\"ssp3\", \"ssp2\", \"ssp1\", \"current\"))\n\ndata.lims &lt;- suppressMessages(data %&gt;%\n  group_by(species, scenario) %&gt;%\n  summarise(sst_max = max(sst), sst_min = min(sst)))\n\ndata.lims$up_lim &lt;- rep(c(lims[lims[,1] == \"eclu\",\"delta_up\"],\n                          lims[lims[,1] == \"lyva\",\"delta_up\"],\n                          lims[lims[,1] == \"trve\",\"delta_up\"]), each = 4)\ndata.lims$lo_lim &lt;- rep(c(lims[lims[,1] == \"eclu\",\"delta_lo\"],\n                          lims[lims[,1] == \"lyva\",\"delta_lo\"],\n                          lims[lims[,1] == \"trve\",\"delta_lo\"]), each = 4)\n\nlims$labels &lt;- paste0(expression(T[opt]), \"~\", lims$optimum, \"*degree*C\")\nlims$labels_b &lt;- paste0(expression(T[max]), \"~\", lims$upper_l, \"*degree*C\")\n\n# Facet label names\nsupp.labs &lt;- c(\"Echinometra lucunter\",\n               \"Lytechinus variegatus\",\n               \"Tripneustes ventricosus\")\nnames(supp.labs) &lt;- c(\"eclu\", \"lyva\", \"trve\")\n\n# Plot\np &lt;- ggplot(data) + \n  geom_hline(yintercept = 0, linewidth = .5, color = \"grey60\")+\n  geom_hline(data = lims, aes(yintercept = upper_l - optimum),\n             linewidth = .5, color = \"grey60\", linetype = 2)+\n  ggdist::stat_halfeye(\n    aes(x = scenario, y = sst),\n    adjust = .5,\n    width = .3,\n    .width = 0,\n    justification = -.5,\n    fill = \"grey70\",\n    point_colour = NA\n  ) +\n  geom_point(\n          # draw horizontal lines instead of points\n          # See: https://www.cedricscherer.com/\n          shape = \"|\",\n          size = 4.8,\n          alpha = .1,\n          aes(x = scenario, y = sst, color = sit)\n  ) +\n  geom_boxplot(\n    aes(x = scenario, y = sst),\n    width = .23, \n    outlier.shape = NA,\n    fill = NA\n  ) +\n  scale_color_manual(values = rev(c(\"#0B59BF\", \"#D65600\")))+\n  scale_fill_manual(values = rev(c(\"#0B59BF\", \"#D65600\")))+\n  geom_errorbar(data = data.lims,\n                  aes(x = scenario, ymin = sst_max, ymax = up_lim),\n                 linewidth = .8, color = \"#030303\", width = .1,\n                 position = position_nudge(y = 0, x = -0.15))+\n  geom_text(data = lims,\n            aes(label = labels),\n            x = \"current\", y = -0.2, parse = T, vjust = -5,\n            size = 3, hjust = \"right\",\n            color = \"grey60\")+\n  geom_text(data = lims,\n            aes(label = labels_b, y = (delta_up - 0.2)),\n            x = \"current\", parse = T, vjust = -5.9,\n            size = 3, hjust = \"right\",\n            color = \"grey60\")+\n  theme_bw()+\n  ylab(expression(\"Difference of temperature (SST -\"~T[opt]~\")\")) +\n  xlab(\"Scenario\")+\n  scale_x_discrete(labels = c(\"SSP3\", \"SSP2\", \"SSP1\", \"Current\"),\n                   expand = expansion(add = c(0.4, 0.8)))+\n  scale_y_continuous(limits = c(-9, 8.5),\n                     breaks = seq(-8, 8, by = 2))+\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_text(hjust = 0, size = 10, face = \"italic\"),\n        legend.position = \"none\")+\n  coord_flip()+facet_wrap(~species, labeller = labeller(species = supp.labs))\n\np"
  },
  {
    "objectID": "methods.html",
    "href": "methods.html",
    "title": "Methods",
    "section": "",
    "text": "We modeled the current distribution of urchin species using a point process approach, which is well suited for presence-only data. Spatial point processes are models used to describe point patterns that are spatially distributed. This can be, for example, the occurrence of landslides or the records of a species. Those models have been shown as a solution for modeling presence-only data, avoiding the necessity of sampling pseudo-absences, and presenting several advantages for modeling species distribution. Point process models (hereafter, PPM) can be described through a Poisson process, where the point pattern is fitted by an intensity function. SDMs are usually modeled through a non-homogeneous Poisson point process, where point events are independent of each other and where the intensity varies spatially (i.e. there is a spatial trend)."
  },
  {
    "objectID": "lytechinus.html",
    "href": "lytechinus.html",
    "title": "Lytechinus variegatus",
    "section": "",
    "text": "Lytechinus variegatus occurs from North Carolina up to the south of Brazil. It occurs on rocky reefs, sand flats, and seagrass meadows, where it can have great importance in grazing seagrass.\n\n\n\n\nAlvaro E. Migotto. Sea urchin. Cifonauta image database. Available at: http://cifonauta.cebimar.usp.br/media/10635/ Accessed: 2024-04-22. CC BY-NC-SA 3.0 DEED"
  },
  {
    "objectID": "lytechinus.html#current-and-future-distribution-sdms",
    "href": "lytechinus.html#current-and-future-distribution-sdms",
    "title": "Lytechinus variegatus",
    "section": "Current and future distribution (SDMs)",
    "text": "Current and future distribution (SDMs)\nAreas that are suitable for L. variegatus span from the south of Brazil up to North Carolina, which are comparable to the ones for the other species. However, L. variegatus showed areas with a high Relative Occurrence Rate (ROR) in the western Gulf of Mexico that are not shared by neither E. lucunter or T. ventricosus.\n\n\nCode\nsuppressPackageStartupMessages(library(terra))\nsuppressPackageStartupMessages(library(sf))\nlibrary(leaflet)\nlibrary(leaflet.providers)\nlibrary(leafem)\n\nsp &lt;- \"lyva\"\n\nbasedir &lt;- paste0(\"../results/\", sp, \"/predictions/\")\n\nsdm_proj &lt;- list.files(basedir)\nsdm_proj &lt;- sdm_proj[grepl(\"mean\", sdm_proj)]\nsdm_proj_cont &lt;- sdm_proj[grepl(\"cont\", sdm_proj)]\n\nproj_lays &lt;- rast(paste0(basedir, sdm_proj_cont))\nproj_lays &lt;- project(proj_lays, \"EPSG:3857\")\n\n# Normalize to 0-1\nproj_lays &lt;- (proj_lays - min(terra::minmax(proj_lays$lyva_mean_m4_cont_current)[1,])) / (terra::minmax(proj_lays$lyva_mean_m4_cont_current)[2,] - terra::minmax(proj_lays$lyva_mean_m4_cont_current)[1,])\n\n# Get areas of extrapolation\nextrap_lays &lt;- proj_lays[[2:4]]\nextrap_lays[extrap_lays &lt;= terra::minmax(proj_lays$lyva_mean_m4_cont_current)[2,]] &lt;- NA\nextrap_lays[!is.na(extrap_lays)] &lt;- 1\n\nextrap_shape &lt;- lapply(1:3, function(id){\n  terra::project(terra::as.polygons(extrap_lays[[id]]), \"EPSG:4326\")\n})\n\n# Set maximum to the maximum of current layer\nproj_lays[proj_lays &gt; 1] &lt;- 1\n\n# Load points\npts &lt;- read.csv(paste0(\"../data/\", sp, \"/\", sp, \"_filt.csv\"))\npts &lt;- vect(pts, geom = c(\"x\", \"y\"), crs = crs(rast(paste0(basedir, sdm_proj_cont[1]))))\npts &lt;- project(pts, \"EPSG:4326\")\npts &lt;- as.data.frame(geom(pts))\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    proj_lays[[1]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"Current\"\n  ) %&gt;%\n  addRasterImage(\n    proj_lays[[2]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[1]], group = \"SSP1 (RCP2.6)\") %&gt;%\n  addRasterImage(\n    proj_lays[[3]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[2]], group = \"SSP2 (RCP4.5)\") %&gt;%\n  addRasterImage(\n    proj_lays[[4]],\n    project = F,\n    colors = colorNumeric(\n      palette = rev(c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\")),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addPolygons(data = extrap_shape[[3]], group = \"SSP3 (RCP7.0)\") %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = c(\"#A84C00\", \"#D97D27\", \"#F5BD44\", \"#FFD561\", \"#FFF291\",\n                        \"#FFFFBF\", \"#E0F3F8\", \"#ABD9E9\", \"#74ADD1\", \"#4575B4\", \"#313695\"),\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ), values = values(proj_lays[[1]]), title = \"ROR\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Current\", \"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "lytechinus.html#changes-in-future-distribution-sdms",
    "href": "lytechinus.html#changes-in-future-distribution-sdms",
    "title": "Lytechinus variegatus",
    "section": "Changes in future distribution (SDMs)",
    "text": "Changes in future distribution (SDMs)\nMajor changes (including loss in suitable areas) are expected in the distribution of L. variegatus.\n\n\nCode\ndelta &lt;- proj_lays[[2:4]] - proj_lays[[1]]\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    delta[[1]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addRasterImage(\n    delta[[2]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addRasterImage(\n    delta[[3]],\n    project = F,\n    colors = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = \"BrBG\",\n      domain = c(-1,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = T\n    ), values = seq(-1, 1, by = 0.1), title = \"Delta ROR\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  setView(-60, 0, zoom=3)"
  },
  {
    "objectID": "lytechinus.html#current-and-future-distribution-mechanistic-model",
    "href": "lytechinus.html#current-and-future-distribution-mechanistic-model",
    "title": "Lytechinus variegatus",
    "section": "Current and future distribution (mechanistic model)",
    "text": "Current and future distribution (mechanistic model)\nLytechinus variegatus had the widest suitable area according to the mechanistic model. The species would lose approximately 15, 49, and 64% of its suitable area in the SSP1, SSP2, and SSP3 scenarios.\n\n\nCode\n# Load layers and prepare\n# Load threshold data ----\nload(\"../data/sst_limits/allspecies_oisst_thvalues.RData\")\n\n# Load results ----\nsp &lt;- \"lyva\" # Each species is run separately [try \"eclu\" and \"trve\"]\n\n# Load rasters generated before\ncurr &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_current_thresh.tif\"))\nssp1 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp126\", \"_thresh.tif\"))\nssp2 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp245\", \"_thresh.tif\"))\nssp3 &lt;- rast(paste0(\"../data/sst_limits/\", sp, \"_\", \"ssp370\", \"_thresh.tif\"))\n\ncurr &lt;- project(curr, \"EPSG:3857\")\nssp1 &lt;- project(ssp1, \"EPSG:3857\")\nssp2 &lt;- project(ssp2, \"EPSG:3857\")\nssp3 &lt;- project(ssp3, \"EPSG:3857\")\n\n# Get the percentage of time to use as threshold (mean of min and max point)\nlval &lt;- round(((thresholds[[sp]]$time_inrange_hottest_point +\n                        thresholds[[sp]]$time_inrange_coolest_point)/2),\n              2) # round to 2 digits\n\n\n# Get the polygons of the areas that are suitable\nget.pol &lt;- function(x){\n        # temp &lt;- terra::app(x, function(x){\n        #         x[x &lt; lval] &lt;- NA\n        #         x[x &gt;= lval] &lt;- 1\n        #         x\n        # })\n        # temp &lt;- as.polygons(temp)\n        # temp &lt;- aggregate(buffer(temp,0.0001)) # We use a negligible value here\n        #                                       # to solve problems in the pols\n        #                                       # conversion.\n        # temp &lt;- project(temp, \"EPSG:4326\")\n        # # temp &lt;- st_as_sf(temp)\n        # # temp &lt;- st_set_crs(temp, crs(\"EPSG:4326\"))\n        # temp\n      x[x &lt; lval] &lt;- NA\n      x[x &gt;= lval] &lt;- 1\n      terra::project(terra::as.polygons(x), \"EPSG:4326\")\n}\n\ncurr.p &lt;- get.pol(curr)\nssp1.p &lt;- get.pol(ssp1)\nssp2.p &lt;- get.pol(ssp2)\nssp3.p &lt;- get.pol(ssp3)\n\n\n\n# Plot maps\nleaflet() %&gt;%\n  #addProviderTiles(\"OpenStreetMap.Mapnik\", group = \"OSM\") %&gt;%\n  addProviderTiles(\"Esri.WorldGrayCanvas\", group = \"ESRI Gray\") %&gt;%\n  addRasterImage(\n    curr,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"Current\"\n  ) %&gt;%\n  addPolygons(data = curr.p,\n    group = \"Current Suitable\") %&gt;%\n  addRasterImage(\n    ssp1,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP1 (RCP2.6)\"\n  ) %&gt;%\n  addPolygons(data = ssp1.p,\n    group = \"SSP1 Suitable\") %&gt;%\n  addRasterImage(\n    ssp2,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP2 (RCP4.5)\"\n  ) %&gt;%\n  addPolygons(data = ssp2.p,\n    group = \"SSP2 Suitable\") %&gt;%\n  addRasterImage(\n    ssp3,\n    project = F,\n    colors = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = FALSE\n    ),\n    group = \"SSP3 (RCP7.0)\"\n  ) %&gt;%\n  addPolygons(data = ssp3.p,\n    group = \"SSP3 Suitable\") %&gt;%\n  addLegend(pal = colorNumeric(\n      palette = \"Spectral\",\n      domain = c(0,1),\n      na.color = \"#00000000\",\n      alpha = FALSE,\n      reverse = TRUE\n    ), values = seq(0, 1, by = 0.1), title = \"% time\", opacity = 1, position = \"bottomright\",\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE) * 100)) %&gt;%\n  addCircleMarkers(lng = pts$x, lat = pts$y,\n                   #clusterOptions = markerClusterOptions(),\n                   radius = 5, weight = 2.5,\n                   group = \"Occurrence\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Current\", \"SSP1 (RCP2.6)\", \"SSP2 (RCP4.5)\", \"SSP3 (RCP7.0)\"),\n    overlayGroups = c(\"Occurrence\", \"Current Suitable\", \"SSP1 Suitable\", \"SSP2 Suitable\", \"SSP3 Suitable\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  hideGroup(c(\"Occurrence\", \"Current Suitable\", \"SSP1 Suitable\", \"SSP2 Suitable\", \"SSP3 Suitable\")) %&gt;%\n  setView(-60, 0, zoom=3)"
  }
]